>>>> explain join SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
FROM cast_info AS ci,
     info_type AS it1,
     info_type AS it2,
     movie_info AS mi,
     movie_info_idx AS mi_idx,
     name AS n,
     title AS t
WHERE ci.note IN ('(producer)',
                  '(executive producer)')
  AND it1.info = 'budget'
  AND it2.info = 'votes'
  AND n.gender = 'm'
  AND n.name LIKE '%Tim%'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id;
HashJoin: INNER
├── Build
│   └── HashJoin: INNER
│       ├── Build
│       │   └── HashJoin: INNER
│       │       ├── Build
│       │       │   └── Scan: default.imdb.info_type (#2) (read rows: 113)
│       │       └── Probe
│       │           └── HashJoin: INNER
│       │               ├── Build
│       │               │   └── HashJoin: INNER
│       │               │       ├── Build
│       │               │       │   └── Scan: default.imdb.info_type (#1) (read rows: 113)
│       │               │       └── Probe
│       │               │           └── HashJoin: INNER
│       │               │               ├── Build
│       │               │               │   └── Scan: default.imdb.cast_info (#0) (read rows: 23343752)
│       │               │               └── Probe
│       │               │                   └── Scan: default.imdb.movie_info (#3) (read rows: 14835720)
│       │               └── Probe
│       │                   └── Scan: default.imdb.movie_info_idx (#4) (read rows: 1380035)
│       └── Probe
│           └── Scan: default.imdb.name (#5) (read rows: 4167491)
└── Probe
    └── Scan: default.imdb.title (#6) (read rows: 2528312)
<<<<
