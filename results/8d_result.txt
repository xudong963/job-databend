>>>> explain join SELECT MIN(an1.name) AS costume_designer_pseudo,
       MIN(t.title) AS movie_with_costumes
FROM aka_name AS an1,
     cast_info AS ci,
     company_name AS cn,
     movie_companies AS mc,
     name AS n1,
     role_type AS rt,
     title AS t
WHERE cn.country_code ='[us]'
  AND rt.role ='costume designer'
  AND an1.person_id = n1.id
  AND n1.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND an1.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id;
HashJoin: INNER
├── Build
│   └── HashJoin: INNER
│       ├── Build
│       │   └── HashJoin: INNER
│       │       ├── Build
│       │       │   └── HashJoin: INNER
│       │       │       ├── Build
│       │       │       │   └── Scan: default.imdb.role_type (#5) (read rows: 12)
│       │       │       └── Probe
│       │       │           └── HashJoin: INNER
│       │       │               ├── Build
│       │       │               │   └── HashJoin: INNER
│       │       │               │       ├── Build
│       │       │               │       │   └── Scan: default.imdb.company_name (#2) (read rows: 234997)
│       │       │               │       └── Probe
│       │       │               │           └── Scan: default.imdb.movie_companies (#3) (read rows: 2609129)
│       │       │               └── Probe
│       │       │                   └── Scan: default.imdb.cast_info (#1) (read rows: 36244344)
│       │       └── Probe
│       │           └── Scan: default.imdb.aka_name (#0) (read rows: 901343)
│       └── Probe
│           └── Scan: default.imdb.name (#4) (read rows: 4167491)
└── Probe
    └── Scan: default.imdb.title (#6) (read rows: 2528312)
<<<<
