>>>> explain join SELECT MIN(an.name) AS acress_pseudonym,
       MIN(t.title) AS japanese_anime_movie
FROM aka_name AS an,
     cast_info AS ci,
     company_name AS cn,
     movie_companies AS mc,
     name AS n,
     role_type AS rt,
     title AS t
WHERE ci.note ='(voice: English version)'
  AND cn.country_code ='[jp]'
  AND mc.note LIKE '%(Japan)%'
  AND mc.note NOT LIKE '%(USA)%'
  AND (mc.note LIKE '%(2006)%'
       OR mc.note LIKE '%(2007)%')
  AND n.name LIKE '%Yo%'
  AND n.name NOT LIKE '%Yu%'
  AND rt.role ='actress'
  AND t.production_year BETWEEN 2006 AND 2007
  AND (t.title LIKE 'One Piece%'
       OR t.title LIKE 'Dragon Ball Z%')
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id;
HashJoin: INNER
├── Build
│   └── HashJoin: INNER
│       ├── Build
│       │   └── HashJoin: INNER
│       │       ├── Build
│       │       │   └── Scan: default.imdb.role_type (#5) (read rows: 12)
│       │       └── Probe
│       │           └── HashJoin: INNER
│       │               ├── Build
│       │               │   └── HashJoin: INNER
│       │               │       ├── Build
│       │               │       │   └── HashJoin: INNER
│       │               │       │       ├── Build
│       │               │       │       │   └── Scan: default.imdb.cast_info (#1) (read rows: 26210374)
│       │               │       │       └── Probe
│       │               │       │           └── Scan: default.imdb.movie_companies (#3) (read rows: 2609129)
│       │               │       └── Probe
│       │               │           └── Scan: default.imdb.company_name (#2) (read rows: 234997)
│       │               └── Probe
│       │                   └── Scan: default.imdb.name (#4) (read rows: 4167491)
│       └── Probe
│           └── Scan: default.imdb.title (#6) (read rows: 2528312)
└── Probe
    └── Scan: default.imdb.aka_name (#0) (read rows: 901343)
<<<<
